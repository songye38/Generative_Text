대부분의 사람들이 알아차리지도 못하는 사이에 새로운 언어들이 생겨나 지구상에서 번성하고 새로운 형태로 변형되다가 사라져 잊혀지고 있다 인간이 발명한 이러한 언어들은 컴퓨터라고 불리는 지능 있는 기계를 위한 것이다 코드와 언어가 상당히 다른 방식으로 작동하는 데도, 프로그래밍 언어와 그 언어를 작성하는 코드는 ‘자연’언어로 이론화되어 왔다는 점 때문에 언어학적 상황이 복잡해지고 있다 코드가 언어와 다른 점은 수신자가 다양하다는 점, 비교적 작은 기술 전문가 집단에 의해 개발된다는 점, 상업적 제품 주기 안으로 들어가 결과적으로 자본주의적 경제학 안으로 견고하게 통합된다는 점 등이다 언어가 인간 문화 , 인간 종의 특수성을 결정하는 데 중대한 역할을 했다는 점은 대부분 동의하겠지만, 코드의 범위와 정도, 중요성에 대해서는 여전히 논쟁의 여지가 있다 많은 사람들은 자연 언어가 프로그래밍 언어보다 훨씬 더 넓은 기반을 가지고 있다고 주장하면서 코드를 지능형 기계를 위한 인공언어라는 비교적 작은 영역으로 격하하는 입장을 고수한다 하지만 최근에 디지털 알고리즘은 자연 자체의 언어로 보는 주장이 강하게 제기되었다 스티븐 울프람, 에드워드 프레드킨, 해럴드 모로비츠가 주장하듯이 우주가 근본적으로 계산적이라면, 코드는 컴퓨터만이 아니라 모든 물리적 실재의 공통어로 격상된다 이러한 복잡성을 고려하면, 코드와 언어 간의 상호작용을 섬세하고도 이론적으로 정교한 방식으로 이해하는 것이 급선무다 물론 인간 언어에 대해서는 그동안 방대한 연구가 이루어졌으며, 프로그래밍 언어에 대해서는 그보다는 적지만 상당한 양의 연구가 있다 하지만 아직까지 두 종류의 언어를 연결하는 피드백 루프를 탐색하는 비평은 극소수이다 문제는 코드와 언어가 다른 맥락에서 출현하고 발전할 뿐만 아니라, 기호학적으로나 혹은 물질적으로 서로 다른 방식으로 작동한다는 점이다 그런데 이러한 차이들을 이해하는 작업은 다양한 전문가 집단들이 관련된 탓에 지체되고 있다 그 전문가 집단의 한쪽에는 인문학자와 언어학자들이 있고, 다른 쪽에는 컴퓨터 프로그래머와 소프트웨어 엔지니어들이 있다 이 공동체들 사이에는 전반적으로 소통이 부족하지만, 프로그래밍 코드와 언어는 매일 수없이 만나며 지속적으로 상호작용한다 이러한 교섭은 전 지구적인 영역에서 활발히 일어나고 있으며, 일상적 임무를 수행하기 위해 컴퓨터에 의존하는 환경이라면 거의 모든 곳에서 깊숙이 뚫고 들어간다 이제 기술적으로 발전된 사회의 두드러진 특징은 언어만이 아니다 언어 더하기 코드이다 언어와 코드를 체게적으로 함께 사유할 수 있는 이론적 틀을 만들어서 이러한 복잡성을 이해하는 데 기여하고자 하는 것이 이 프로젝트의 목적이다 더 나아가 이 프로젝트는 일련의 사례 연구를 통해 창조적, 기술적, 예술적 실천에서 언어와 코드의 상호작용이 의미하는 바를 탐구한다 사례 연구들은 인쇄와 전자 텍스트성의 관계, 단어만이 아니라 비트를 통한 주체성의 구성, 디지털 프로세스에 대한 은유로 기능하는 아날로그 패턴과 인간이 상호작용할 수 있게 해주는 이해를 포함해서 다양한 문제에 초점을 맞춘다 다음 장에서는 세 가지 주요 담론 시스템인 말하기, 글쓰기, 디지털 컴퓨터 코드를 다룬다
